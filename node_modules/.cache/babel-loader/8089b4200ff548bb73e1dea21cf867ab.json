{"ast":null,"code":"import _slicedToArray from \"/Users/mr.vong/Desktop/webshop-exam/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mr.vong/Desktop/webshop-exam/src/components/ShopingCart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { updateCart } from '../actions/allActions';\n\nfunction ShoppingCart() {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        myShoppingCart = _useState2[0],\n        setMyShoppingCart = _useState2[1];\n\n  useEffect(() => {\n    // Collect data from DB\n    async function getShoppingCart() {\n      let shoppingCart = await fetch('/api/shopping-cart');\n      shoppingCart = await shoppingCart.json();\n      let flowerIds = [];\n\n      for (let flower of shoppingCart) {\n        let flowerObj = {\n          flowerId: flower.flower_id.toString(),\n          quantity: 1\n        };\n        flowerIds.push(flowerObj);\n      }\n\n      dispatch(updateCart(flowerIds.length)); // let flowerIdHash = [];\n      // for (let flowerHash of flowerIds) {\n      //   if(flowerIds.some(flowerObj => flowerObj.flowerId === flowerHash.flowerId)){\n      //     console.log('yup');\n      //     flowerIds.splice()\n      //   }\n      // }\n      // var id = '3';\n      // var count = flowerIds.filter((obj) => obj.flowerId === id).length;\n      // console.log(count);\n      // let result = flowerIds.reduce((unique, o) => {\n      //   if(!unique.some(obj => obj.flowerId === o.flowerId)) {\n      //     unique.push(o);\n      //   }\n      //   return unique;\n      // },[]);\n      // console.log(result);\n\n      console.log(flowerIds); // Display my purchases\n\n      let myPurchases = [];\n\n      for (let flowerId of flowerIds) {\n        let cartFlower = await fetch('/api/flowers/' + flowerId.flowerId);\n        cartFlower = await cartFlower.json(); // if (flowerIds.some(flowerObj => flowerObj.flowerId === flowerId.flowerId)){\n        //   flowerId.quantity += 1;\n        //   console.log('already exist');\n        // }\n\n        myPurchases.push(cartFlower);\n      }\n\n      console.log(myPurchases);\n      setMyShoppingCart(myPurchases);\n    }\n\n    getShoppingCart(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const addToCart = async e => {\n    // myCart.push(e.target.id);\n    // setMyCart(myCart);\n    // console.log(myCart);\n    // dispatch(updateCart(myCart.length));\n    let flowerId = {\n      flowerId: e.target.id\n    };\n    await fetch('/api/shopping-cart', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(flowerId)\n    });\n  };\n\n  const removeFromCart = async e => {\n    // if(myCart.includes(e.target.id)) {\n    //   let flowerIndex = myCart.indexOf(e.target.id);\n    //   myCart.splice(flowerIndex, 1);\n    //   setMyCart(myCart)\n    //   console.log(myCart);\n    //   dispatch(updateCart(myCart.length));\n    let flowerId = {\n      flowerId: e.target.id\n    };\n    await fetch('/api/shopping-cart', {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(flowerId)\n    }); // }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"shopping-cart container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"H\\xE4r \\xE4r dina varor!\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, myShoppingCart.map(flower => React.createElement(\"div\", {\n    className: \"col s12 m6 l4\",\n    key: flower.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: flower.url,\n    alt: \"blomma\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn-floating halfway-fab waves-effect waves-dark white add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    onClick: addToCart,\n    id: flower.id,\n    className: \"black-text material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"add\")), React.createElement(\"button\", {\n    className: \"btn-floating halfway-fab waves-effect waves-dark white remove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    onClick: removeFromCart,\n    id: flower.id,\n    className: \"black-text material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"remove\"))), React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, flower.title), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, flower.price, \" kr\")))))));\n}\n\nexport default ShoppingCart;","map":{"version":3,"sources":["/Users/mr.vong/Desktop/webshop-exam/src/components/ShopingCart.js"],"names":["React","useEffect","useState","useDispatch","updateCart","ShoppingCart","dispatch","myShoppingCart","setMyShoppingCart","getShoppingCart","shoppingCart","fetch","json","flowerIds","flower","flowerObj","flowerId","flower_id","toString","quantity","push","length","console","log","myPurchases","cartFlower","addToCart","e","target","id","method","headers","body","JSON","stringify","removeFromCart","map","url","title","price"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { updateCart } from '../actions/allActions';\n\n\nfunction ShoppingCart() {\n  const dispatch = useDispatch();\n  const [myShoppingCart, setMyShoppingCart] = useState([]);\n\n\n  useEffect(()=> {\n\n    // Collect data from DB\n    async function getShoppingCart() {\n      let shoppingCart = await fetch('/api/shopping-cart');\n      shoppingCart = await shoppingCart.json();\n      \n      let flowerIds = [];\n      for (let flower of shoppingCart) {\n        let flowerObj = { flowerId: flower.flower_id.toString(), quantity: 1 }\n        flowerIds.push(flowerObj)\n      }\n      dispatch(updateCart(flowerIds.length));\n      \n      // let flowerIdHash = [];\n      // for (let flowerHash of flowerIds) {\n      //   if(flowerIds.some(flowerObj => flowerObj.flowerId === flowerHash.flowerId)){\n      //     console.log('yup');\n      //     flowerIds.splice()\n      //   }\n      // }\n\n      // var id = '3';\n      // var count = flowerIds.filter((obj) => obj.flowerId === id).length;\n\n      // console.log(count);\n\n      // let result = flowerIds.reduce((unique, o) => {\n      //   if(!unique.some(obj => obj.flowerId === o.flowerId)) {\n      //     unique.push(o);\n      //   }\n      //   return unique;\n      // },[]);\n      // console.log(result);\n\n\n      console.log(flowerIds);\n      // Display my purchases\n      let myPurchases = [];\n      for (let flowerId of flowerIds) {\n        let cartFlower = await fetch('/api/flowers/' + flowerId.flowerId);\n        cartFlower = await cartFlower.json();\n\n        // if (flowerIds.some(flowerObj => flowerObj.flowerId === flowerId.flowerId)){\n        //   flowerId.quantity += 1;\n        //   console.log('already exist');\n        // }\n\n        myPurchases.push(cartFlower);\n      }\n\n      console.log(myPurchases);\n      setMyShoppingCart(myPurchases);\n    }\n\n    getShoppingCart();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addToCart = async e => {\n    // myCart.push(e.target.id);\n    // setMyCart(myCart);\n    // console.log(myCart);\n    // dispatch(updateCart(myCart.length));\n\n    let flowerId = {flowerId: e.target.id}\n\n    await fetch('/api/shopping-cart', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(flowerId)\n    });\n  }\n\n\n  const removeFromCart = async e => {\n    // if(myCart.includes(e.target.id)) {\n    //   let flowerIndex = myCart.indexOf(e.target.id);\n    //   myCart.splice(flowerIndex, 1);\n    //   setMyCart(myCart)\n    //   console.log(myCart);\n    //   dispatch(updateCart(myCart.length));\n      \n      let flowerId = {flowerId: e.target.id}\n\n      await fetch('/api/shopping-cart', {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(flowerId)\n      });\n    // }\n  }\n\n\n  return (\n    <div className=\"shopping-cart container\">\n      <h1>\n        Här är dina varor!\n      </h1>\n      <div className=\"row\">\n        {myShoppingCart.map((flower) => \n          <div className=\"col s12 m6 l4\" key={flower.id}>\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <img src={flower.url} alt=\"blomma\" />\n                <button className=\"btn-floating halfway-fab waves-effect waves-dark white add\">\n                  <i onClick={addToCart} id={flower.id} className=\"black-text material-icons\">add</i>\n                </button>\n                <button className=\"btn-floating halfway-fab waves-effect waves-dark white remove\">\n                  <i onClick={removeFromCart} id={flower.id} className=\"black-text material-icons\">remove</i>\n                </button>\n              </div>\n              <div className=\"card-content\">\n                <span className=\"card-title\">{flower.title}</span>\n                <span className=\"price\">{flower.price} kr</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ShoppingCart;"]},"metadata":{},"sourceType":"module"}